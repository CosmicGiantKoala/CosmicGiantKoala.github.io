<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CosmicGiantKoala</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on CosmicGiantKoala</description>
    <generator>Hugo</generator>
    <language>ko-KR</language>
    <lastBuildDate>Mon, 22 May 2023 00:27:57 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>개인정보1</title>
      <link>http://localhost:1313/docs/personal/info/info/</link>
      <pubDate>Mon, 22 May 2023 00:27:57 +0100</pubDate>
      <guid>http://localhost:1313/docs/personal/info/info/</guid>
      <description></description>
    </item>
    <item>
      <title>Projects No1</title>
      <link>http://localhost:1313/docs/projects/slimlush/overview/</link>
      <pubDate>Mon, 22 May 2023 00:27:57 +0100</pubDate>
      <guid>http://localhost:1313/docs/projects/slimlush/overview/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction &lt;a href=&#34;#introduction&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Introduction link&lt;/p&gt;</description>
    </item>
    <item>
      <title>개요</title>
      <link>http://localhost:1313/docs/projects/rfist/overview/</link>
      <pubDate>Mon, 22 May 2023 00:27:57 +0100</pubDate>
      <guid>http://localhost:1313/docs/projects/rfist/overview/</guid>
      <description>&lt;p&gt;개요임&lt;/p&gt;</description>
    </item>
    <item>
      <title>개요</title>
      <link>http://localhost:1313/docs/projects/rfice/overview/</link>
      <pubDate>Mon, 22 May 2023 00:27:57 +0100</pubDate>
      <guid>http://localhost:1313/docs/projects/rfice/overview/</guid>
      <description>&lt;p&gt;개요임&lt;/p&gt;</description>
    </item>
    <item>
      <title>하우징시스템</title>
      <link>http://localhost:1313/docs/projects/rfice/housingsystem/</link>
      <pubDate>Mon, 22 May 2023 00:27:57 +0100</pubDate>
      <guid>http://localhost:1313/docs/projects/rfice/housingsystem/</guid>
      <description>&lt;h3 id=&#34;myroomeditor-시스템-분석-및-구조-정리&#34;&gt;MyRoomEditor 시스템 분석 및 구조 정리 &lt;a href=&#34;#myroomeditor-%ec%8b%9c%ec%8a%a4%ed%85%9c-%eb%b6%84%ec%84%9d-%eb%b0%8f-%ea%b5%ac%ec%a1%b0-%ec%a0%95%eb%a6%ac&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;📋 전체적인 구조 및 아키텍처&#xA;MyRoomEditor는 Unity 기반의 3D 룸 편집 시스템으로, MVP(Model-View-Presenter) 패턴과 의존성 주입(DI) 패턴을 활용하여 구현되었습니다.&#xA;주요 디렉토리 구조```&#xA;MyRoomEditor/&#xA;├── Presentation/Presenters/MyRoomEditor/     # MVP 패턴의 Presenter 계층&#xA;├── Scenes/Components/MyRoomEditor/           # 컴포넌트 및 UI 요소들&#xA;├── Scenes/MyRoomEditor/                      # 메인 씬 관리 및 기능 구현&#xA;└── Data/DataSource/MyRoomEditor/            # 데이터 소스 계층&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;43880cf&#34; class=&#34;language- &#34;&gt;&#xD;&#xA;  &lt;code&gt;&#xD;&#xA;🏗️ 핵심 아키텍처 패턴&#xD;&#xA;1. MVP (Model-View-Presenter) 패턴&#xD;&#xA;Presenter: 비즈니스 로직 처리 및 View와 Model 간 중재&#xD;&#xA;View: UI 표시 및 사용자 입력 처리&#xD;&#xA;Model: 데이터 관리 (DataSource를 통해 구현)&#xD;&#xA;2. 의존성 주입 (Zenject 사용)&#xD;&#xA;각 컴포넌트 간의 느슨한 결합 구현&#xD;&#xA;테스트 용이성 및 확장성 향상&#xD;&#xA;🔧 주요 컴포넌트 분석&#xD;&#xA;1. 프레젠터 레이어 (Presenters)&#xD;&#xA;MyRoomEditorPresenter.cs&#xD;&#xA;전체 MyRoomEditor 시스템의 메인 프레젠터&#xD;&#xA;UI와 비즈니스 로직 간의 중재 역할&#xD;&#xA;상태 관리 및 이벤트 처리&#xD;&#xA;MyRoomEditorPlacementPresenter.cs&#xD;&#xA;오브젝트 배치 기능 담당&#xD;&#xA;3D 공간에서의 prop 배치 로직 관리&#xD;&#xA;PropScrollItemPresenter.cs / PropScrollPanelPresenter.cs&#xD;&#xA;UI 스크롤 뷰에서의 아이템 표시 관리&#xD;&#xA;무한 스크롤 기능 지원&#xD;&#xA;CategoryItemPresenter.cs / CategoryItemHandlerPresenter.cs&#xD;&#xA;카테고리별 아이템 관리&#xD;&#xA;사용자가 선택한 카테고리에 따른 아이템 필터링&#xD;&#xA;2. 씬 관리자 (Scene Managers)&#xD;&#xA;MyRoomEditorSceneManager.cs&#xD;&#xA;에디터 씬의 전체적인 생명주기 관리&#xD;&#xA;씬 초기화, 정리, 상태 전환 처리&#xD;&#xA;MyRoomEditorInteractionManager.cs&#xD;&#xA;사용자 상호작용 관리 (마우스, 키보드 입력)&#xD;&#xA;오브젝트 선택, 이동, 회전 등의 인터랙션&#xD;&#xA;MyRoomEditorPlacementManager.cs&#xD;&#xA;오브젝트 배치 시스템 관리&#xD;&#xA;배치 가능한 영역 검증 및 스냅 기능&#xD;&#xA;3. Prop 관리 시스템&#xD;&#xA;SpawnablePropBase.cs&#xD;&#xA;모든 배치 가능한 오브젝트의 베이스 클래스&#xD;&#xA;공통 인터페이스 및 기본 기능 제공&#xD;&#xA;특화된 Prop 클래스들:&#xD;&#xA;SpawnableWallProp.cs: 벽면 배치 오브젝트&#xD;&#xA;SpawnableFloorAndCeilProp.cs: 바닥/천장 배치 오브젝트&#xD;&#xA;SpawnablePhotoFrameProp.cs: 사진 프레임 오브젝트&#xD;&#xA;SpawnableScreenProp.cs: 스크린 오브젝트&#xD;&#xA;4. 입력 시스템&#xD;&#xA;MyRoomEditorInput.inputactions&#xD;&#xA;Unity Input System을 활용한 입력 맵핑 정의&#xD;&#xA;MyRoomEditorInputController.cs&#xD;&#xA;입력 이벤트를 게임 로직으로 변환&#xD;&#xA;마우스, 키보드, 터치 입력 통합 관리&#xD;&#xA;5. UI 컴포넌트들&#xD;&#xA;편집 도구 UI:&#xD;&#xA;EditorDefaultBar.cs: 기본 편집 도구 바&#xD;&#xA;MyRoomEditorObjectEditUI.cs: 오브젝트 편집 UI&#xD;&#xA;MyRoomEditorColorSelectUI.cs: 색상 선택 UI&#xD;&#xA;스크롤 및 카테고리 UI:&#xD;&#xA;PropScrollPanel.cs: prop 선택 스크롤 패널&#xD;&#xA;CategoryItem.cs: 카테고리 아이템&#xD;&#xA;ThemeChangeView.cs: 테마 변경 뷰&#xD;&#xA;🎯 주요 기능 및 플로우&#xD;&#xA;1. 에디터 시작 플로우``` &#xD;&#xA;Scene Load → MyRoomEditorSceneManager 초기화 &#xD;&#xA;→ UI 컴포넌트 로딩 → 입력 시스템 활성화 &#xD;&#xA;→ 카메라 설정 → 편집 모드 활성화&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;오브젝트 배치 플로우```&#xA;카테고리 선택 → Prop 목록 로딩 → 사용자 선택&#xA;→ 배치 위치 검증 → SpawnableProp 생성&#xA;→ PlacementManager를 통한 배치 → 상태 저장&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;b219f9b&#34; class=&#34;language- &#34;&gt;&#xD;&#xA;  &lt;code&gt;&#xD;&#xA;3. 오브젝트 편집 플로우``` &#xD;&#xA;오브젝트 선택 → PropEditor 활성화 &#xD;&#xA;→ 편집 모드 진입 (이동/회전/색상 변경) &#xD;&#xA;→ 실시간 미리보기 → 변경사항 적용&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;p&gt;💡 핵심 기술적 특징&lt;/p&gt;</description>
    </item>
    <item>
      <title>프리팹ID 관리 유틸리티</title>
      <link>http://localhost:1313/docs/projects/rfice/prefablocalidhelper/</link>
      <pubDate>Mon, 22 May 2023 00:27:57 +0100</pubDate>
      <guid>http://localhost:1313/docs/projects/rfice/prefablocalidhelper/</guid>
      <description>&lt;h1 id=&#34;prefablocalid-시스템-상세-기능-개요&#34;&gt;PrefabLocalId 시스템 상세 기능 개요 &lt;a href=&#34;#prefablocalid-%ec%8b%9c%ec%8a%a4%ed%85%9c-%ec%83%81%ec%84%b8-%ea%b8%b0%eb%8a%a5-%ea%b0%9c%ec%9a%94&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;-시스템-개요&#34;&gt;📋 시스템 개요 &lt;a href=&#34;#-%ec%8b%9c%ec%8a%a4%ed%85%9c-%ea%b0%9c%ec%9a%94&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;PrefabLocalId 시스템은 Unity 프리팹 내의 컴포넌트들에게 고유한 로컬 ID를 자동으로 할당하고 관리하는 시스템입니다. 주로 프리팹이 변경될 때마다 자동으로 ID를 갱신하여 컴포넌트 간의 참조 무결성을 보장합니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-시스템-구조-및-핵심-컴포넌트&#34;&gt;🏗️ 시스템 구조 및 핵심 컴포넌트 &lt;a href=&#34;#-%ec%8b%9c%ec%8a%a4%ed%85%9c-%ea%b5%ac%ec%a1%b0-%eb%b0%8f-%ed%95%b5%ec%8b%ac-%ec%bb%b4%ed%8f%ac%eb%84%8c%ed%8a%b8&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;1-핵심-클래스-구조&#34;&gt;1. 핵심 클래스 구조``` &lt;a href=&#34;#1-%ed%95%b5%ec%8b%ac-%ed%81%b4%eb%9e%98%ec%8a%a4-%ea%b5%ac%ec%a1%b0&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;PrefabLocalId System&#xA;├── PrefabLocalIdHelper (Editor Only)     # 프리팹 변경 감지 및 ID 갱신 관리&#xA;├── PrefabLocalIdInteractor              # 프리팹의 LocalId 데이터 저장 및 관리&#xA;├── IPrefabLocalIdInteractor             # LocalId를 받을 수 있는 컴포넌트 인터페이스&#xA;└── Data Structures&#xA;├── LocalIdGroupInfo                 # 클래스별 LocalId 그룹 정보&#xA;└── LocalIdInfo                     # 개별 컴포넌트의 LocalId 정보&lt;/p&gt;</description>
    </item>
    <item>
      <title>실시간 파일 공유 오브젝트 기능</title>
      <link>http://localhost:1313/docs/projects/rfice/fileshare/</link>
      <pubDate>Mon, 22 May 2023 00:27:57 +0100</pubDate>
      <guid>http://localhost:1313/docs/projects/rfice/fileshare/</guid>
      <description>&lt;h1 id=&#34;networkedscreen-기능-상세-분석-및-정리&#34;&gt;NetworkedScreen 기능 상세 분석 및 정리 &lt;a href=&#34;#networkedscreen-%ea%b8%b0%eb%8a%a5-%ec%83%81%ec%84%b8-%eb%b6%84%ec%84%9d-%eb%b0%8f-%ec%a0%95%eb%a6%ac&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;1-개요&#34;&gt;1. 개요 &lt;a href=&#34;#1-%ea%b0%9c%ec%9a%94&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;NetworkedScreen은 Unity 메타버스 환경에서 다중 사용자가 실시간으로 화면을 공유하고 상호작용할 수 있는 네트워크 기반 스크린 시스템입니다. Fusion 네트워킹을 통해 동기화되며, 화면 공유, 파일 뷰어, 비디오 채팅 등의 기능을 제공합니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-시스템-아키텍처&#34;&gt;2. 시스템 아키텍처 &lt;a href=&#34;#2-%ec%8b%9c%ec%8a%a4%ed%85%9c-%ec%95%84%ed%82%a4%ed%85%8d%ec%b2%98&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;21-핵심-구성-요소&#34;&gt;2.1 핵심 구성 요소``` &lt;a href=&#34;#21-%ed%95%b5%ec%8b%ac-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;NetworkedScreenManager (관리자)&#xA;├── NetworkedScreenHandler (핸들러)&#xA;│   └── NetworkedScreen (네트워크 오브젝트)&#xA;│       ├── UI Handler (사용자 인터페이스)&#xA;│       ├── File Viewers (파일 뷰어들)&#xA;│       └── Display System (화면 출력)&#xA;└── NetworkedScreenShareManager (공유 관리자)&lt;/p&gt;</description>
    </item>
    <item>
      <title>세팅시스템</title>
      <link>http://localhost:1313/docs/projects/rfice/settingmanagementsystem/</link>
      <pubDate>Mon, 22 May 2023 00:27:57 +0100</pubDate>
      <guid>http://localhost:1313/docs/projects/rfice/settingmanagementsystem/</guid>
      <description>&lt;p&gt;SettingsPresenter 완전 아키텍처 분석 (Clean Architecture)&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;전체 아키텍처 레이어 구조&#xA;1.1 Clean Architecture 기반 계층 구조``` mermaid&#xA;graph TB&#xA;A[Presentation Layer] &amp;ndash;&amp;gt; B[Domain Layer] &amp;ndash;&amp;gt; C[Data Layer]&lt;/p&gt;&#xA;&lt;p&gt;subgraph &amp;ldquo;Presentation Layer&amp;rdquo;&#xA;A1[SettingsPresenter]&#xA;A2[MobileSettingsPresenter]&#xA;A3[CommonCommandController]&#xA;end&lt;/p&gt;&#xA;&lt;p&gt;subgraph &amp;ldquo;Domain Layer&amp;rdquo;&#xA;B1[ISettingsInteractor]&#xA;B2[SettingsInteractor]&#xA;B3[Business Logic]&#xA;end&lt;/p&gt;&#xA;&lt;p&gt;subgraph &amp;ldquo;Data Layer&amp;rdquo;&#xA;C1[Repository Pattern]&#xA;C2[Local Storage]&#xA;C3[External APIs]&#xA;end&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;804a2be&#34; class=&#34;language- &#34;&gt;&#xD;&#xA;  &lt;code&gt;&#xD;&#xA;1.2 계층별 역할과 책임&#xD;&#xA;Presentation Layer (프레젠테이션 레이어)&#xD;&#xA;&#xD;&#xA;SettingsPresenter: 설정 관련 UI 상태 관리 및 이벤트 처리&#xD;&#xA;&#xD;&#xA;MobileSettingsPresenter: 모바일 전용 설정 및 디바이스 적응&#xD;&#xA;&#xD;&#xA;CommonCommandController: 외부 명령 및 시스템 레벨 통신&#xD;&#xA;Domain Layer (도메인 레이어)&#xD;&#xA;&#xD;&#xA;ISettingsInteractor: 설정 비즈니스 로직 인터페이스&#xD;&#xA;&#xD;&#xA;SettingsInteractor: 구체적인 설정 비즈니스 로직 구현&#xD;&#xA;&#xD;&#xA;Entities: 설정 도메인 모델들&#xD;&#xA;Data Layer (데이터 레이어)&#xD;&#xA;Repository 패턴을 통한 데이터 접근&#xD;&#xA;로컬 저장소 (PlayerPrefs, JSON 등)&#xD;&#xA;외부 API 통신&#xD;&#xA;2. 핵심 컴포넌트 상세 분석&#xD;&#xA;2.1 ISettingsInteractor (Domain Interface)``` csharp&#xD;&#xA;// 추정 인터페이스 구조 (Clean Architecture 패턴)&#xD;&#xA;public interface ISettingsInteractor&#xD;&#xA;{&#xD;&#xA;    // 이벤트 퍼블리싱&#xD;&#xA;    event Action&amp;lt;bool&amp;gt; OnVideoChatStateChanged;&#xD;&#xA;    event Action&amp;lt;bool&amp;gt; OnAudioZoneEnableChanged;&#xD;&#xA;    event Action&amp;lt;float&amp;gt; OnBackgroundSoundVolumeChanged;&#xD;&#xA;    event Action&amp;lt;PlayerCommunicationStatus&amp;gt; OnPlayerCommunicationStatusChanged;&#xD;&#xA;&#xD;&#xA;    // 비즈니스 로직 메서드들&#xD;&#xA;    bool GetVideoChatEnable();&#xD;&#xA;    void SetVideoChatVideoEnable(bool enable);&#xD;&#xA;    bool GetVideoChatVideoEnable();&#xD;&#xA;    void SetVideoChatAudioEnable(bool enable);&#xD;&#xA;    bool GetVideoChatAudioEnable();&#xD;&#xA;    &#xD;&#xA;    // 오디오존 관리&#xD;&#xA;    void EnableAudioZone(bool enable);&#xD;&#xA;    bool IsAudioZoneEnabled();&#xD;&#xA;    void ActiveAudioZone(bool active);&#xD;&#xA;    bool IsActiveAudioZone();&#xD;&#xA;    &#xD;&#xA;    // 배경음 관리&#xD;&#xA;    void SetBackgroundSoundVolume(float volume);&#xD;&#xA;    float GetBackgroundSoundVolume();&#xD;&#xA;    void SetBackgroundSoundMute(bool mute);&#xD;&#xA;    bool GetBackgroundSoundMute();&#xD;&#xA;    &#xD;&#xA;    // 모바일 컨트롤러 설정&#xD;&#xA;    void SetMobileControllerScale(MobileControllerMoveUIScale scale);&#xD;&#xA;    MobileControllerMoveUIScale GetMobileControllerScale();&#xD;&#xA;}&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;p&gt;2.2 SettingsInteractor (Domain Implementation)``` csharp&#xA;// 추정 구현 구조&#xA;public class SettingsInteractor : ISettingsInteractor, IDisposable, IInitializable&#xA;{&#xA;// Repository 의존성&#xA;private ISettingsRepository _settingsRepository;&#xA;private IDeviceRepository _deviceRepository;&lt;/p&gt;</description>
    </item>
    <item>
      <title>탈것 시스템</title>
      <link>http://localhost:1313/docs/projects/rfice/playervehicle/</link>
      <pubDate>Mon, 22 May 2023 00:27:57 +0100</pubDate>
      <guid>http://localhost:1313/docs/projects/rfice/playervehicle/</guid>
      <description>&lt;p&gt;🚀 Vehicle 시스템 구조 및 기능 분석&#xA;📋 전체 시스템 아키텍처&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;핵심 컴포넌트 구조```&#xA;Vehicle System&#xA;├── PlayerVehicleController (메인 컨트롤러)&#xA;├── VehicleObject (실제 탈것 오브젝트)&#xA;├── VehicleObjectPooling (오브젝트 풀링 관리)&#xA;├── VehicleType (탈것 타입 정의)&#xA;└── External Dependencies&#xA;├── VehicleInputDispatcher (입력 디스패처)&#xA;├── PlayerController (플레이어 컨트롤러)&#xA;├── PlayerAnimatorController (애니메이션 컨트롤러)&#xA;└── IPlayerStateInfo (플레이어 상태 정보)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;bc16005&#34; class=&#34;language- &#34;&gt;&#xD;&#xA;  &lt;code&gt;&#xD;&#xA;2. 이벤트 기반 연결 구조&#xD;&#xA;🔄 이벤트 흐름도``` &#xD;&#xA;User Input → VehicleInputDispatcher → PlayerVehicleController&#xD;&#xA;    ↓&#xD;&#xA;PlayerStateInfo → Network Sync → Other Players&#xD;&#xA;    ↓&#xD;&#xA;VehicleObject Pool → Vehicle Spawn/Despawn&#xD;&#xA;    ↓&#xD;&#xA;PlayerController → Movement Control&#xD;&#xA;    ↓&#xD;&#xA;PlayerAnimator → Animation State&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;p&gt;🎯 주요 기능 분석&lt;/p&gt;</description>
    </item>
    <item>
      <title>모바일 컨트롤러</title>
      <link>http://localhost:1313/docs/projects/rfice/mobilecontroller/</link>
      <pubDate>Mon, 22 May 2023 00:27:57 +0100</pubDate>
      <guid>http://localhost:1313/docs/projects/rfice/mobilecontroller/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;전체 구조 및 연관 관계&#xA;주요 의존성 및 연관 컴포넌트&#xA;MobileInputController는 Unity의 입력 시스템과 DI(Dependency Injection) 패턴을 활용한 모바일 터치 입력 처리 컨트롤러입니다.&#xA;주요 연관 컴포넌트:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;RficeAction: Unity Input System의 액션 맵&lt;/p&gt;&#xA;&lt;p&gt;CameraInputDispatcher: 카메라 입력 이벤트 디스패처&lt;/p&gt;&#xA;&lt;p&gt;MoveInputDispatcher: 이동 입력 이벤트 디스패처&lt;/p&gt;&#xA;&lt;p&gt;UIInputDispatcher: UI 입력 이벤트 디스패처&lt;/p&gt;&#xA;&lt;p&gt;ObjectBarHandler: 오브젝트 바 처리 핸들러&lt;/p&gt;&#xA;&lt;p&gt;FloatingListViewCloseGestureHandler: 플로팅 리스트뷰 제스처 핸들러&#xA;2. 핵심 기능 분석&#xA;2.1 터치 입력 처리 시스템``` c#&#xA;private void OnTouchInputChanged(Finger activeFinger)&lt;/p&gt;</description>
    </item>
    <item>
      <title>보조렌더링 유틸리티</title>
      <link>http://localhost:1313/docs/projects/rfice/assistantcamera/</link>
      <pubDate>Mon, 22 May 2023 00:27:57 +0100</pubDate>
      <guid>http://localhost:1313/docs/projects/rfice/assistantcamera/</guid>
      <description>&lt;h1 id=&#34;assistcamera-유틸리티-기능-분석&#34;&gt;AssistCamera 유틸리티 기능 분석 &lt;a href=&#34;#assistcamera-%ec%9c%a0%ed%8b%b8%eb%a6%ac%ed%8b%b0-%ea%b8%b0%eb%8a%a5-%eb%b6%84%ec%84%9d&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;는 Unity에서 3D 오브젝트를 특정 각도에서 렌더링하여 프리뷰를 제공하는 카메라 시스템입니다. &lt;code&gt;AssistCamera&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;핵심-구성-요소&#34;&gt;핵심 구성 요소 &lt;a href=&#34;#%ed%95%b5%ec%8b%ac-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;1-assistcameracomponent-메인-컴포넌트&#34;&gt;1. &lt;strong&gt;AssistCameraComponent&lt;/strong&gt; (메인 컴포넌트) &lt;a href=&#34;#1-assistcameracomponent-%eb%a9%94%ec%9d%b8-%ec%bb%b4%ed%8f%ac%eb%84%8c%ed%8a%b8&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;3D 오브젝트를 렌더링하는 보조 카메라를 생성하고 제어합니다.&lt;/p&gt;&#xA;&lt;h4 id=&#34;주요-기능&#34;&gt;주요 기능: &lt;a href=&#34;#%ec%a3%bc%ec%9a%94-%ea%b8%b0%eb%8a%a5&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;자동 카메라 배치&lt;/strong&gt;: SkinnedMeshRenderer의 Bounds를 계산하여 오브젝트 전체가 보이도록 카메라 위치 자동 설정&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;RenderTexture 생성&lt;/strong&gt;: 지정된 해상도로 렌더링 결과를 텍스처로 출력 (iOS: 1x AA, 기타: 4x AA)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;6방향 뷰&lt;/strong&gt;: Front, Behind, Left, Right, Top, Bottom 중 선택 가능&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;파츠별 렌더링&lt;/strong&gt;: 머리, 상체, 하체 등 특정 파츠만 집중해서 보여주기&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;카메라 제어&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Rotate&lt;/strong&gt;: Y축 기준 회전&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Zoom&lt;/strong&gt;: 지정된 범위 내에서 줌 인/아웃&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-assistcamerahandler-중앙-관리자&#34;&gt;2. &lt;strong&gt;AssistCameraHandler&lt;/strong&gt; (중앙 관리자) &lt;a href=&#34;#2-assistcamerahandler-%ec%a4%91%ec%95%99-%ea%b4%80%eb%a6%ac%ec%9e%90&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;여러 AssistCamera를 Dictionary로 관리하는 싱글톤 핸들러입니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
